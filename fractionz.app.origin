##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;
        root /home/ubuntu/fractionz/frontend/build;

        # Add index.php to the list if you are using PHP
        index index.html index.htm;

        server_name www.fractionz.app fractionz.app;

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri /index.html;
                # proxy_pass http://127.0.0.1:3000;
        }

        # node api reverse proxy
        location /serve/ {
                proxy_pass http://localhost:5002/;
                proxy_ssl_verify off;
                client_max_body_size 100M;
        }
        gzip on;
        gzip_vary on;
        gzip_types text/html text/plain application/javascript application/font-woff text/css application/json;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;

## All static files will be served directly.
#location ~* \.(?:css|cur|js|jpe?g|gif|htc|ico|png|html|xml|otf|ttf|eot|woff|woff2|svg|webp)$ {
#    access_log off;
#    expires 367d;

#    add_header Pragma public;
#        add_header Cache-Control "public";

    ## No need to bleed constant updates. Send the all shebang in one
    ## fell swoop.
#    tcp_nodelay off;

    ## Set the OS file cache.
#    open_file_cache max=3000 inactive=120s;
#    open_file_cache_valid 45s;
#    open_file_cache_min_uses 2;
#    open_file_cache_errors off;
#}

        charset utf-8;
        charset_types text/html text/css application/javascript;

        # pass PHP scripts to FastCGI server
        #
        #location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
        #       fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}




    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/fractionz.app/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/fractionz.app/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#       listen 80;
#       listen [::]:80;
#
#       server_name example.com;
#
#       root /var/www/example.com;
#       index index.html;
#
#       location / {
#               try_files $uri $uri/ =404;
#       }
#}

server {
    if ($host = www.fractionz.app) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = fractionz.app) {
        return 301 https://$host$request_uri;
    } # managed by Certbot



        server_name www.fractionz.app fractionz.app;
    listen 80;
    return 404; # managed by Certbot




}